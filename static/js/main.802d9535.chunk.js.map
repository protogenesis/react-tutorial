{"version":3,"sources":["table.js","form.js","app.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAaMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAKFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MASb,OAAO,gCAAQJ,KAEFS,EAnCD,SAACV,GAAW,IAChBE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OC4BjDE,E,4MAjCbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBV,EADgB,EAChBA,KAAMW,EADU,EACVA,MACd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACX,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGX,IAAD,EACaS,KAAKR,MAAlBP,EADA,EACAA,KAAMC,EADN,EACMA,IAEb,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOP,MAAOX,EAAMmB,SAAUJ,KAAKP,eACrE,uBAAOQ,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMP,MAAOV,EAAKkB,SAAUJ,KAAKP,eAClE,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA7BvCO,aCgCJC,E,4MA9Bbd,MAAQ,CACNe,WAAY,I,EAadnB,gBAAkB,SAACJ,GAAW,IACpBuB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAInBe,aAAe,SAACU,GACd,EAAKZ,SAAS,CACZU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,uDArBzC,OACE,sBAAKE,UAAU,YAAf,UACE,cAAC,EAAD,CACE9B,cAAemB,KAAKR,MAAMe,WAC1BnB,gBAAiBY,KAAKZ,kBAExB,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAXfM,a,MCGlBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.802d9535.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst Table = (props) => {\r\n  const { characterData, removeCharacter } = props;\r\n\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n    </table>\r\n  );\r\n};\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n  return <tbody>{rows}</tbody>;\r\n};\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: \"\",\r\n    job: \"\",\r\n  };\r\n\r\n  state = this.initialState;\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    const {name, job} = this.state;\r\n\r\n    return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input type=\"text\" name='name' id='name' value={name} onChange={this.handleChange} />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input type=\"text\" name='job' id='job' value={job} onChange={this.handleChange} />\r\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default Form;","import React, { Component } from \"react\";\r\nimport Table from \"./table\";\r\nimport Form from \"./form\";\r\nclass App extends Component {\r\n  state = {\r\n    characters: [],\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Container\">\r\n        <Table\r\n          characterData={this.state.characters}\r\n          removeCharacter={this.removeCharacter}\r\n        />\r\n        <Form handleSubmit={this.handleSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n  removeCharacter = (index) => {\r\n    const { characters } = this.state;\r\n\r\n    this.setState({\r\n      characters: characters.filter((character, i) => {\r\n        return i !== index;\r\n      }),\r\n    });\r\n  };\r\n  handleSubmit = (character) => {\r\n    this.setState({\r\n      characters: [...this.state.characters, character],\r\n    });\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './app';\nimport \"./index.css\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}